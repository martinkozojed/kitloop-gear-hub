name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Type check
        run: npm run typecheck

  test:deno:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: "v1.x"
      - name: Deno version
        run: deno --version
      - name: Run Edge Function unit tests
        run: |
          deno test supabase/functions/reserve_gear --allow-env --allow-read
          deno test --quiet supabase/functions/confirm_reservation
          deno test --quiet supabase/functions/cleanup_reservation_holds || echo "cleanup tests skipped"
          deno test --quiet supabase/functions/create_payment_intent
          deno test --quiet supabase/functions/stripe_webhook

  test:db:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Run Supabase DB tests
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_URL: ${{ secrets.SUPABASE_DB_URL }}
        run: supabase db test --db-url "$SUPABASE_DB_URL"

  check_finish:
    runs-on: ubuntu-latest
    needs: [test:deno, test:db]
    steps:
      - name: Check if all tests passed
        run: echo "All tests passed"

  build:
    runs-on: ubuntu-latest
    needs: [typecheck, check_finish]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

  netlify-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Netlify deploy preview
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: npx netlify deploy --dir=dist --build --message "PR #${{ github.event.number }}"
