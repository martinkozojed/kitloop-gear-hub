name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Type check
        run: npm run typecheck

  build:
    runs-on: ubuntu-latest
    needs: typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build

  edge-tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: "v1.x"
      - name: Deno version
        run: deno --version
      - name: Run reserve_gear unit tests
        run: deno test supabase/functions/reserve_gear --allow-env --allow-read
      - name: Run confirm_reservation unit tests
        run: deno test --quiet supabase/functions/confirm_reservation
      - name: Run cleanup_reservation_holds unit tests
        run: deno test --quiet supabase/functions/cleanup_reservation_holds || echo "cleanup tests skipped"
      - name: Run create_payment_intent unit tests
        run: deno test --quiet supabase/functions/create_payment_intent
      - name: Run stripe_webhook unit tests
        run: deno test --quiet supabase/functions/stripe_webhook
      - name: TODO Supabase RLS tests
        run: echo "TODO: configure Supabase CLI db test to run supabase/tests/rls_membership.sql"

  netlify-preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Netlify deploy preview
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: npx netlify deploy --dir=dist --build --message "PR #${{ github.event.number }}"
